version: '3'

services:

  postgre:
    container_name: postgre
    image: postgres:latest
    restart: always  
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports: 
     - 5432:5432
    command: ["postgres", "-c", "logging_collector=on", "-c", "log_directory=/var/log/postgresql", "-c", "log_statement=all"]
    volumes:
      - pgdata:/var/lib/postgresql/data 
      - ./logs/pg:/var/log/postgresql
    networks:
      - network

  redis:
    container_name: redis
    image: redis:latest
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - "6379:6379"
    command: ["redis-server", "--logfile", "/var/log/redis/redis.log", "--loglevel", "notice"]
    volumes:
      - redisdata:/var/lib/redis/data 
      - ./logs/redis:/var/log/redis
    networks:
      - network

  mongo:
    container_name: mongo
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - 27017:27017
    command: ["mongod", "--logpath", "/var/log/mongodb/mongodb.log", "--logappend"]
    volumes:
      - mongodata:/var/lib/mongo/data
      - ./logs/mongo:/var/log/mongodb
    networks:
      - network
  
  neo4j:
    container_name: neo4j
    image: neo4j:latest
    ports:
      - 7687:7687
    volumes:
      - neo4j:/var/lib/neo4j/data
      - ./logs/neo4j:/logs
    networks:
      - network

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.15.2
    environment:
          - discovery.type=single-node
          - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - 9300:9300
    volumes:
      - elasticsearch:/var/lib/elasticsearch/data
      - ./logs/elasticsearch:/usr/share/elasticsearch/logs
    networks:
      - network

volumes:
  pgdata:
  redisdata: 
  mongodata:
  neo4j:
  elasticsearch:

networks:
  network:
    driver: bridge